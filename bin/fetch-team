#!/usr/bin/env perl
use strict;
use warnings;
use HTTP::Tiny;

my $user = $ENV{MSF_USER};
my $pass = $ENV{MSF_PASS};
die 'No MSF_USER or MSF_PASS found in ENV' unless $user && $pass;

my $year = shift @ARGV or die 'must provide a year (2016-2017)';
my $team = shift @ARGV;

if ($team) {
  fetch_team($team, $year);
}
else {
  my @teams = (qw/ari atl bal bos chc cin cle col cws det hou kc laa lad mia mil min nym nyy oak phi pit sd sf sea stl tb tex tor was/);
  for my $team (@teams) {
    fetch_team($team, $year);
    # dont hammer the API
    sleep 1;
  }
}

sub fetch_team {
  my ($team, $year) = @_;
  my $url = "api.mysportsfeeds.com/v1.2/pull/mlb/$year-regular/cumulative_player_stats.json?team=$team";
  print STDERR "Fetching $team $url\n";

  my $ua  = HTTP::Tiny->new();
  my $res = $ua->get("https://$user:$pass\@$url");
  die "request failed: $res->{status} $res->{reason}" unless $res->{success};

  mkdir "data/$year" unless -d "data/$year";
  open my $fh, '>', "data/$year/$team.json" or die $!;
  print $fh "$res->{content}\n";
}
